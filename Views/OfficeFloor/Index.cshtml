
@using BMDBConnection;
@model BuildingMaintenance.Models.OfficeFloorModel
@{
    ViewData["Title"] = "Home Page";
    string title = "Office Floor";
    officefloor officefloor = Model.IsNewRecord ? new officefloor() : Model.OfficeFloors.FirstOrDefault(x => x.OfficeFloorID == Model.OfficeFloorID);
    officefloor = officefloor ?? new officefloor();
    string hide = string.Empty, buttonCenter = string.Empty;
    ListingTableModel listingTableModel = new ListingTableModel();
    DynamicDropDownModel dropDownModel = new DynamicDropDownModel();

    if (Model.IsNewRecord)
    {
        hide = "display:none";
        buttonCenter = "d-flex";
        listingTableModel.Columns = new List<string>() { "OfficeFloorID", "Floor Name", "Office Name", "Building Name", "Office Status", "Office No", "Space", "Space Rent" };
        listingTableModel.TableName = "OfficeFloors";
        listingTableModel.PrimaryColumn = "OfficeFloorID";
        listingTableModel.EditURL = "/officefloor/index/";
        listingTableModel.TableData = new List<Dictionary<string, object>>();
        Dictionary<string, object> data = new Dictionary<string, object>();
        foreach (var item in Model.OfficeFloors)
        {
            DropDownData floor = Model.Floors.DropDownData.FirstOrDefault(x => (int)x.Value == item.FloorID);
            DropDownData office = Model.Offices.DropDownData.FirstOrDefault(x => (int)x.Value == item.OfficeID);
            DropDownData building = Model.Buildings.DropDownData.FirstOrDefault(x => (int)x.Value == item.BuildingID);
            DropDownData officestatus = Model.OfficeStatuses.DropDownData.FirstOrDefault(x => (short)x.Value == item.OfficeStatusID);

            data = new Dictionary<string, object>();
            data.Add("OfficeFloorID", item.OfficeFloorID);
            data.Add("Floor Name", floor != null ? floor.DisplayText : item.FloorID.ToString());
            data.Add("Office Name", office != null ? office.DisplayText : item.OfficeID.ToString());
            data.Add("Building Name", building != null ? building.DisplayText : item.BuildingID.ToString());
            data.Add("Office StatusID", officestatus != null ? officestatus.DisplayText : item.OfficeStatusID.ToString());
            data.Add("Grand Total", item.OfficeNo);
            data.Add("Space", item.Space);
            data.Add("Space Rent", (item.Space * (decimal)(floor != null ? floor.Attribute1 : (decimal)0)));

            listingTableModel.TableData.Add(data);
        }
    }
}

@{
    ViewData["Title"] = "Index";
}

<div class="maincontent-holder">
    <div class="header-section d-flex justify-content-between mt-4">
        <div class="page-title">
            <h3>@title</h3>
        </div>
        <div class="addupdate-btn" style="@(Model.IsNewRecord ? string.Empty : "display:none")">
            <button class="btn btn-primary" onclick="ToggleContent('form-section', 'addupdate-btn')" value="Add Item">Add Item</button>
        </div>
    </div>
    <div class="form-section" style="@hide">
        <div class="card shadow-lg border-2 rounded-lg mt-5">
            <div class="relative-pos">
                <div id="form-loader" class="loading" style="display: none;"><span class="loader"></span></div>
                <div class="card-header"><h3 class="text-center font-weight-light my-4">@title</h3></div>
                <div class="card-body">
                    @using (Html.BeginForm("SaveUpdateRecord", "Dynamic", FormMethod.Post, new { id = "form_createrecord" }))
                    {
                    <section section="OfficeFloors" rows="1" displayseqno="1">
                        <input rel-primarykey="true" style="display:none" type="text" id="OfficeFloors-OfficeFloorID" name="OfficeFloors-OfficeFloorID" value="@Model.OfficeFloorID" isnewrecord="@(Model.IsNewRecord ? "1" : "0")" />
                        <div class="form-group">
                            @Html.Partial("_DropDown", Model.Floors)
                        </div>
                        <div class="form-group">
                            @Html.Partial("_DropDown", Model.Offices)
                        </div>
                        <div class="form-group">
                            @Html.Partial("_DropDown", Model.Buildings)
                        </div>
                        <div class="form-group">
                            @Html.Partial("_DropDown", Model.OfficeStatuses)
                        </div>
                        <div class="form-group">
                            <label class="" for="OfficeNo">Office No</label>
                            <input column-name="OfficeNo" type="text" class="form-control py-4" id="OfficeFloors-OfficeNo" name="OfficeFloors-OfficeNo" value="@officefloor.OfficeNo">
                        </div>
                        <div class="form-group">
                            <label class="" for="OfficeNo">Space</label>
                            <input column-name="Space" type="number" class="form-control py-4" id="OfficeFloors-Space" name="OfficeFloors-Space" value="@officefloor.Space">
                        </div>
                        <div class="form-group">
                            <label class="" for="OfficeNo">Monthly Rate</label>
                            <input column-name="Space" type="number" class="form-control py-4" id="MonthlyRate" name="MonthlyRate" value="0">
                        </div>
                    </section>
                    }
                </div>
                <div class="card-footer text-center">
                    <div class="header-section d-flex justify-content-between mt-2">
                        <input type="button" class="btn btn-primary btn-lg" value="Submit" onclick="SubmitItem()" id="Submit" />
                        @if (Model.IsNewRecord)
                        {
                            <input type="button" class="btn btn-warning btn-lg" value="Cancel" onclick="CloseForm('form-section', 'addupdate-btn')" id="Cancel" />
                        }
                        else
                        {
                            <a href="/officefloor/index" class="btn btn-warning btn-lg">Back To Main</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    @if (Model.IsNewRecord)
    {
        <div class="listing-sction">
            @Html.Partial("_ListingTable", listingTableModel)
        </div>
    }
</div>

<script>
    function DropdownChange(element) {
        if ($(element).attr('id') == 'OfficeFloors-FloorID') {
            var rate = $(element).find(':selected').attr('rel-1');
            var space = $('#OfficeFloors-Space').val();
            if ($.isNumeric(rate) && $.isNumeric(space)) {
                $('#MonthlyRate').val(rate * space);
            }
            else {
                $('#MonthlyRate').val(0);
            }
        }
    }

    $(document).ready(function () {
        $('#OfficeFloors-Space').focusout(function () {
            var rate = $('#OfficeFloors-FloorID').find(':selected').attr('rel-1');
            var space = $('#OfficeFloors-Space').val();
            if ($.isNumeric(rate) && $.isNumeric(space)) {
                $('#MonthlyRate').val(rate * space);
            }
            else {
                $('#MonthlyRate').val(0);
            }
        });
    });

    function formOpen() {
       
    }
</script>